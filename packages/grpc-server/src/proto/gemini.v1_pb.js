// source: gemini.v1.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.gemini.v1.ApprovalMode', null, global);
goog.exportSymbol('proto.gemini.v1.ClientRequest', null, global);
goog.exportSymbol('proto.gemini.v1.ClientRequest.RequestCase', null, global);
goog.exportSymbol('proto.gemini.v1.ErrorResponse', null, global);
goog.exportSymbol('proto.gemini.v1.ServerResponse', null, global);
goog.exportSymbol('proto.gemini.v1.ServerResponse.ResponseCase', null, global);
goog.exportSymbol('proto.gemini.v1.SessionInfo', null, global);
goog.exportSymbol('proto.gemini.v1.StartRequest', null, global);
goog.exportSymbol('proto.gemini.v1.TextResponse', null, global);
goog.exportSymbol('proto.gemini.v1.ThoughtResponse', null, global);
goog.exportSymbol('proto.gemini.v1.ToolEndedResponse', null, global);
goog.exportSymbol('proto.gemini.v1.ToolStartedResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gemini.v1.ClientRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gemini.v1.ClientRequest.oneofGroups_);
};
goog.inherits(proto.gemini.v1.ClientRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gemini.v1.ClientRequest.displayName = 'proto.gemini.v1.ClientRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gemini.v1.ServerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.gemini.v1.ServerResponse.oneofGroups_);
};
goog.inherits(proto.gemini.v1.ServerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gemini.v1.ServerResponse.displayName = 'proto.gemini.v1.ServerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gemini.v1.StartRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gemini.v1.StartRequest.repeatedFields_, null);
};
goog.inherits(proto.gemini.v1.StartRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gemini.v1.StartRequest.displayName = 'proto.gemini.v1.StartRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gemini.v1.SessionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gemini.v1.SessionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gemini.v1.SessionInfo.displayName = 'proto.gemini.v1.SessionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gemini.v1.TextResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gemini.v1.TextResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gemini.v1.TextResponse.displayName = 'proto.gemini.v1.TextResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gemini.v1.ThoughtResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gemini.v1.ThoughtResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gemini.v1.ThoughtResponse.displayName = 'proto.gemini.v1.ThoughtResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gemini.v1.ToolStartedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gemini.v1.ToolStartedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gemini.v1.ToolStartedResponse.displayName = 'proto.gemini.v1.ToolStartedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gemini.v1.ToolEndedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gemini.v1.ToolEndedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gemini.v1.ToolEndedResponse.displayName = 'proto.gemini.v1.ToolEndedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gemini.v1.ErrorResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gemini.v1.ErrorResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gemini.v1.ErrorResponse.displayName = 'proto.gemini.v1.ErrorResponse';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gemini.v1.ClientRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.gemini.v1.ClientRequest.RequestCase = {
  REQUEST_NOT_SET: 0,
  START_REQUEST: 1,
  PROMPT: 2
};

/**
 * @return {proto.gemini.v1.ClientRequest.RequestCase}
 */
proto.gemini.v1.ClientRequest.prototype.getRequestCase = function() {
  return /** @type {proto.gemini.v1.ClientRequest.RequestCase} */(jspb.Message.computeOneofCase(this, proto.gemini.v1.ClientRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gemini.v1.ClientRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gemini.v1.ClientRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gemini.v1.ClientRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gemini.v1.ClientRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    startRequest: (f = msg.getStartRequest()) && proto.gemini.v1.StartRequest.toObject(includeInstance, f),
    prompt: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gemini.v1.ClientRequest}
 */
proto.gemini.v1.ClientRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gemini.v1.ClientRequest;
  return proto.gemini.v1.ClientRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gemini.v1.ClientRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gemini.v1.ClientRequest}
 */
proto.gemini.v1.ClientRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gemini.v1.StartRequest;
      reader.readMessage(value,proto.gemini.v1.StartRequest.deserializeBinaryFromReader);
      msg.setStartRequest(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrompt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gemini.v1.ClientRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gemini.v1.ClientRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gemini.v1.ClientRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gemini.v1.ClientRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gemini.v1.StartRequest.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional StartRequest start_request = 1;
 * @return {?proto.gemini.v1.StartRequest}
 */
proto.gemini.v1.ClientRequest.prototype.getStartRequest = function() {
  return /** @type{?proto.gemini.v1.StartRequest} */ (
    jspb.Message.getWrapperField(this, proto.gemini.v1.StartRequest, 1));
};


/**
 * @param {?proto.gemini.v1.StartRequest|undefined} value
 * @return {!proto.gemini.v1.ClientRequest} returns this
*/
proto.gemini.v1.ClientRequest.prototype.setStartRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.gemini.v1.ClientRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gemini.v1.ClientRequest} returns this
 */
proto.gemini.v1.ClientRequest.prototype.clearStartRequest = function() {
  return this.setStartRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gemini.v1.ClientRequest.prototype.hasStartRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string prompt = 2;
 * @return {string}
 */
proto.gemini.v1.ClientRequest.prototype.getPrompt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gemini.v1.ClientRequest} returns this
 */
proto.gemini.v1.ClientRequest.prototype.setPrompt = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.gemini.v1.ClientRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gemini.v1.ClientRequest} returns this
 */
proto.gemini.v1.ClientRequest.prototype.clearPrompt = function() {
  return jspb.Message.setOneofField(this, 2, proto.gemini.v1.ClientRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gemini.v1.ClientRequest.prototype.hasPrompt = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.gemini.v1.ServerResponse.oneofGroups_ = [[1,2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.gemini.v1.ServerResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  SESSION_INFO: 1,
  TEXT_RESPONSE: 2,
  THOUGHT_RESPONSE: 3,
  TOOL_STARTED: 4,
  TOOL_ENDED: 5,
  ERROR: 6
};

/**
 * @return {proto.gemini.v1.ServerResponse.ResponseCase}
 */
proto.gemini.v1.ServerResponse.prototype.getResponseCase = function() {
  return /** @type {proto.gemini.v1.ServerResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.gemini.v1.ServerResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gemini.v1.ServerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gemini.v1.ServerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gemini.v1.ServerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gemini.v1.ServerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionInfo: (f = msg.getSessionInfo()) && proto.gemini.v1.SessionInfo.toObject(includeInstance, f),
    textResponse: (f = msg.getTextResponse()) && proto.gemini.v1.TextResponse.toObject(includeInstance, f),
    thoughtResponse: (f = msg.getThoughtResponse()) && proto.gemini.v1.ThoughtResponse.toObject(includeInstance, f),
    toolStarted: (f = msg.getToolStarted()) && proto.gemini.v1.ToolStartedResponse.toObject(includeInstance, f),
    toolEnded: (f = msg.getToolEnded()) && proto.gemini.v1.ToolEndedResponse.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.gemini.v1.ErrorResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gemini.v1.ServerResponse}
 */
proto.gemini.v1.ServerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gemini.v1.ServerResponse;
  return proto.gemini.v1.ServerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gemini.v1.ServerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gemini.v1.ServerResponse}
 */
proto.gemini.v1.ServerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gemini.v1.SessionInfo;
      reader.readMessage(value,proto.gemini.v1.SessionInfo.deserializeBinaryFromReader);
      msg.setSessionInfo(value);
      break;
    case 2:
      var value = new proto.gemini.v1.TextResponse;
      reader.readMessage(value,proto.gemini.v1.TextResponse.deserializeBinaryFromReader);
      msg.setTextResponse(value);
      break;
    case 3:
      var value = new proto.gemini.v1.ThoughtResponse;
      reader.readMessage(value,proto.gemini.v1.ThoughtResponse.deserializeBinaryFromReader);
      msg.setThoughtResponse(value);
      break;
    case 4:
      var value = new proto.gemini.v1.ToolStartedResponse;
      reader.readMessage(value,proto.gemini.v1.ToolStartedResponse.deserializeBinaryFromReader);
      msg.setToolStarted(value);
      break;
    case 5:
      var value = new proto.gemini.v1.ToolEndedResponse;
      reader.readMessage(value,proto.gemini.v1.ToolEndedResponse.deserializeBinaryFromReader);
      msg.setToolEnded(value);
      break;
    case 6:
      var value = new proto.gemini.v1.ErrorResponse;
      reader.readMessage(value,proto.gemini.v1.ErrorResponse.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gemini.v1.ServerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gemini.v1.ServerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gemini.v1.ServerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gemini.v1.ServerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gemini.v1.SessionInfo.serializeBinaryToWriter
    );
  }
  f = message.getTextResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gemini.v1.TextResponse.serializeBinaryToWriter
    );
  }
  f = message.getThoughtResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gemini.v1.ThoughtResponse.serializeBinaryToWriter
    );
  }
  f = message.getToolStarted();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.gemini.v1.ToolStartedResponse.serializeBinaryToWriter
    );
  }
  f = message.getToolEnded();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.gemini.v1.ToolEndedResponse.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.gemini.v1.ErrorResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional SessionInfo session_info = 1;
 * @return {?proto.gemini.v1.SessionInfo}
 */
proto.gemini.v1.ServerResponse.prototype.getSessionInfo = function() {
  return /** @type{?proto.gemini.v1.SessionInfo} */ (
    jspb.Message.getWrapperField(this, proto.gemini.v1.SessionInfo, 1));
};


/**
 * @param {?proto.gemini.v1.SessionInfo|undefined} value
 * @return {!proto.gemini.v1.ServerResponse} returns this
*/
proto.gemini.v1.ServerResponse.prototype.setSessionInfo = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.gemini.v1.ServerResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gemini.v1.ServerResponse} returns this
 */
proto.gemini.v1.ServerResponse.prototype.clearSessionInfo = function() {
  return this.setSessionInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gemini.v1.ServerResponse.prototype.hasSessionInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TextResponse text_response = 2;
 * @return {?proto.gemini.v1.TextResponse}
 */
proto.gemini.v1.ServerResponse.prototype.getTextResponse = function() {
  return /** @type{?proto.gemini.v1.TextResponse} */ (
    jspb.Message.getWrapperField(this, proto.gemini.v1.TextResponse, 2));
};


/**
 * @param {?proto.gemini.v1.TextResponse|undefined} value
 * @return {!proto.gemini.v1.ServerResponse} returns this
*/
proto.gemini.v1.ServerResponse.prototype.setTextResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.gemini.v1.ServerResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gemini.v1.ServerResponse} returns this
 */
proto.gemini.v1.ServerResponse.prototype.clearTextResponse = function() {
  return this.setTextResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gemini.v1.ServerResponse.prototype.hasTextResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ThoughtResponse thought_response = 3;
 * @return {?proto.gemini.v1.ThoughtResponse}
 */
proto.gemini.v1.ServerResponse.prototype.getThoughtResponse = function() {
  return /** @type{?proto.gemini.v1.ThoughtResponse} */ (
    jspb.Message.getWrapperField(this, proto.gemini.v1.ThoughtResponse, 3));
};


/**
 * @param {?proto.gemini.v1.ThoughtResponse|undefined} value
 * @return {!proto.gemini.v1.ServerResponse} returns this
*/
proto.gemini.v1.ServerResponse.prototype.setThoughtResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.gemini.v1.ServerResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gemini.v1.ServerResponse} returns this
 */
proto.gemini.v1.ServerResponse.prototype.clearThoughtResponse = function() {
  return this.setThoughtResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gemini.v1.ServerResponse.prototype.hasThoughtResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ToolStartedResponse tool_started = 4;
 * @return {?proto.gemini.v1.ToolStartedResponse}
 */
proto.gemini.v1.ServerResponse.prototype.getToolStarted = function() {
  return /** @type{?proto.gemini.v1.ToolStartedResponse} */ (
    jspb.Message.getWrapperField(this, proto.gemini.v1.ToolStartedResponse, 4));
};


/**
 * @param {?proto.gemini.v1.ToolStartedResponse|undefined} value
 * @return {!proto.gemini.v1.ServerResponse} returns this
*/
proto.gemini.v1.ServerResponse.prototype.setToolStarted = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.gemini.v1.ServerResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gemini.v1.ServerResponse} returns this
 */
proto.gemini.v1.ServerResponse.prototype.clearToolStarted = function() {
  return this.setToolStarted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gemini.v1.ServerResponse.prototype.hasToolStarted = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ToolEndedResponse tool_ended = 5;
 * @return {?proto.gemini.v1.ToolEndedResponse}
 */
proto.gemini.v1.ServerResponse.prototype.getToolEnded = function() {
  return /** @type{?proto.gemini.v1.ToolEndedResponse} */ (
    jspb.Message.getWrapperField(this, proto.gemini.v1.ToolEndedResponse, 5));
};


/**
 * @param {?proto.gemini.v1.ToolEndedResponse|undefined} value
 * @return {!proto.gemini.v1.ServerResponse} returns this
*/
proto.gemini.v1.ServerResponse.prototype.setToolEnded = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.gemini.v1.ServerResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gemini.v1.ServerResponse} returns this
 */
proto.gemini.v1.ServerResponse.prototype.clearToolEnded = function() {
  return this.setToolEnded(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gemini.v1.ServerResponse.prototype.hasToolEnded = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ErrorResponse error = 6;
 * @return {?proto.gemini.v1.ErrorResponse}
 */
proto.gemini.v1.ServerResponse.prototype.getError = function() {
  return /** @type{?proto.gemini.v1.ErrorResponse} */ (
    jspb.Message.getWrapperField(this, proto.gemini.v1.ErrorResponse, 6));
};


/**
 * @param {?proto.gemini.v1.ErrorResponse|undefined} value
 * @return {!proto.gemini.v1.ServerResponse} returns this
*/
proto.gemini.v1.ServerResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.gemini.v1.ServerResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gemini.v1.ServerResponse} returns this
 */
proto.gemini.v1.ServerResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gemini.v1.ServerResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gemini.v1.StartRequest.repeatedFields_ = [6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gemini.v1.StartRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gemini.v1.StartRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gemini.v1.StartRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gemini.v1.StartRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    prompt: jspb.Message.getFieldWithDefault(msg, 2, ""),
    model: jspb.Message.getFieldWithDefault(msg, 4, ""),
    approvalMode: jspb.Message.getFieldWithDefault(msg, 5, 0),
    coreToolsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    excludeToolsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    advancedConfig: (f = msg.getAdvancedConfig()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gemini.v1.StartRequest}
 */
proto.gemini.v1.StartRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gemini.v1.StartRequest;
  return proto.gemini.v1.StartRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gemini.v1.StartRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gemini.v1.StartRequest}
 */
proto.gemini.v1.StartRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrompt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 5:
      var value = /** @type {!proto.gemini.v1.ApprovalMode} */ (reader.readEnum());
      msg.setApprovalMode(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addCoreTools(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addExcludeTools(value);
      break;
    case 8:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setAdvancedConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gemini.v1.StartRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gemini.v1.StartRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gemini.v1.StartRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gemini.v1.StartRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrompt();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getApprovalMode();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getCoreToolsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getExcludeToolsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getAdvancedConfig();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string session_id = 1;
 * @return {string}
 */
proto.gemini.v1.StartRequest.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gemini.v1.StartRequest} returns this
 */
proto.gemini.v1.StartRequest.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string prompt = 2;
 * @return {string}
 */
proto.gemini.v1.StartRequest.prototype.getPrompt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gemini.v1.StartRequest} returns this
 */
proto.gemini.v1.StartRequest.prototype.setPrompt = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string model = 4;
 * @return {string}
 */
proto.gemini.v1.StartRequest.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gemini.v1.StartRequest} returns this
 */
proto.gemini.v1.StartRequest.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ApprovalMode approval_mode = 5;
 * @return {!proto.gemini.v1.ApprovalMode}
 */
proto.gemini.v1.StartRequest.prototype.getApprovalMode = function() {
  return /** @type {!proto.gemini.v1.ApprovalMode} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.gemini.v1.ApprovalMode} value
 * @return {!proto.gemini.v1.StartRequest} returns this
 */
proto.gemini.v1.StartRequest.prototype.setApprovalMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * repeated string core_tools = 6;
 * @return {!Array<string>}
 */
proto.gemini.v1.StartRequest.prototype.getCoreToolsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gemini.v1.StartRequest} returns this
 */
proto.gemini.v1.StartRequest.prototype.setCoreToolsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gemini.v1.StartRequest} returns this
 */
proto.gemini.v1.StartRequest.prototype.addCoreTools = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gemini.v1.StartRequest} returns this
 */
proto.gemini.v1.StartRequest.prototype.clearCoreToolsList = function() {
  return this.setCoreToolsList([]);
};


/**
 * repeated string exclude_tools = 7;
 * @return {!Array<string>}
 */
proto.gemini.v1.StartRequest.prototype.getExcludeToolsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gemini.v1.StartRequest} returns this
 */
proto.gemini.v1.StartRequest.prototype.setExcludeToolsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gemini.v1.StartRequest} returns this
 */
proto.gemini.v1.StartRequest.prototype.addExcludeTools = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gemini.v1.StartRequest} returns this
 */
proto.gemini.v1.StartRequest.prototype.clearExcludeToolsList = function() {
  return this.setExcludeToolsList([]);
};


/**
 * optional google.protobuf.Struct advanced_config = 8;
 * @return {?proto.google.protobuf.Struct}
 */
proto.gemini.v1.StartRequest.prototype.getAdvancedConfig = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 8));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.gemini.v1.StartRequest} returns this
*/
proto.gemini.v1.StartRequest.prototype.setAdvancedConfig = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gemini.v1.StartRequest} returns this
 */
proto.gemini.v1.StartRequest.prototype.clearAdvancedConfig = function() {
  return this.setAdvancedConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gemini.v1.StartRequest.prototype.hasAdvancedConfig = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gemini.v1.SessionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.gemini.v1.SessionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gemini.v1.SessionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gemini.v1.SessionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gemini.v1.SessionInfo}
 */
proto.gemini.v1.SessionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gemini.v1.SessionInfo;
  return proto.gemini.v1.SessionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gemini.v1.SessionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gemini.v1.SessionInfo}
 */
proto.gemini.v1.SessionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gemini.v1.SessionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gemini.v1.SessionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gemini.v1.SessionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gemini.v1.SessionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string session_id = 1;
 * @return {string}
 */
proto.gemini.v1.SessionInfo.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gemini.v1.SessionInfo} returns this
 */
proto.gemini.v1.SessionInfo.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gemini.v1.TextResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gemini.v1.TextResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gemini.v1.TextResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gemini.v1.TextResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    content: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gemini.v1.TextResponse}
 */
proto.gemini.v1.TextResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gemini.v1.TextResponse;
  return proto.gemini.v1.TextResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gemini.v1.TextResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gemini.v1.TextResponse}
 */
proto.gemini.v1.TextResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gemini.v1.TextResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gemini.v1.TextResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gemini.v1.TextResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gemini.v1.TextResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string content = 1;
 * @return {string}
 */
proto.gemini.v1.TextResponse.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gemini.v1.TextResponse} returns this
 */
proto.gemini.v1.TextResponse.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gemini.v1.ThoughtResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gemini.v1.ThoughtResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gemini.v1.ThoughtResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gemini.v1.ThoughtResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    thought: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gemini.v1.ThoughtResponse}
 */
proto.gemini.v1.ThoughtResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gemini.v1.ThoughtResponse;
  return proto.gemini.v1.ThoughtResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gemini.v1.ThoughtResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gemini.v1.ThoughtResponse}
 */
proto.gemini.v1.ThoughtResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setThought(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gemini.v1.ThoughtResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gemini.v1.ThoughtResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gemini.v1.ThoughtResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gemini.v1.ThoughtResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThought();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string thought = 1;
 * @return {string}
 */
proto.gemini.v1.ThoughtResponse.prototype.getThought = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gemini.v1.ThoughtResponse} returns this
 */
proto.gemini.v1.ThoughtResponse.prototype.setThought = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gemini.v1.ToolStartedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gemini.v1.ToolStartedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gemini.v1.ToolStartedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gemini.v1.ToolStartedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    args: (f = msg.getArgs()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gemini.v1.ToolStartedResponse}
 */
proto.gemini.v1.ToolStartedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gemini.v1.ToolStartedResponse;
  return proto.gemini.v1.ToolStartedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gemini.v1.ToolStartedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gemini.v1.ToolStartedResponse}
 */
proto.gemini.v1.ToolStartedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gemini.v1.ToolStartedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gemini.v1.ToolStartedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gemini.v1.ToolStartedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gemini.v1.ToolStartedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.gemini.v1.ToolStartedResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gemini.v1.ToolStartedResponse} returns this
 */
proto.gemini.v1.ToolStartedResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Struct args = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.gemini.v1.ToolStartedResponse.prototype.getArgs = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.gemini.v1.ToolStartedResponse} returns this
*/
proto.gemini.v1.ToolStartedResponse.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gemini.v1.ToolStartedResponse} returns this
 */
proto.gemini.v1.ToolStartedResponse.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gemini.v1.ToolStartedResponse.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gemini.v1.ToolEndedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gemini.v1.ToolEndedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gemini.v1.ToolEndedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gemini.v1.ToolEndedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultSummary: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gemini.v1.ToolEndedResponse}
 */
proto.gemini.v1.ToolEndedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gemini.v1.ToolEndedResponse;
  return proto.gemini.v1.ToolEndedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gemini.v1.ToolEndedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gemini.v1.ToolEndedResponse}
 */
proto.gemini.v1.ToolEndedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResultSummary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gemini.v1.ToolEndedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gemini.v1.ToolEndedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gemini.v1.ToolEndedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gemini.v1.ToolEndedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultSummary();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.gemini.v1.ToolEndedResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gemini.v1.ToolEndedResponse} returns this
 */
proto.gemini.v1.ToolEndedResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string result_summary = 2;
 * @return {string}
 */
proto.gemini.v1.ToolEndedResponse.prototype.getResultSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gemini.v1.ToolEndedResponse} returns this
 */
proto.gemini.v1.ToolEndedResponse.prototype.setResultSummary = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gemini.v1.ErrorResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gemini.v1.ErrorResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gemini.v1.ErrorResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gemini.v1.ErrorResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gemini.v1.ErrorResponse}
 */
proto.gemini.v1.ErrorResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gemini.v1.ErrorResponse;
  return proto.gemini.v1.ErrorResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gemini.v1.ErrorResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gemini.v1.ErrorResponse}
 */
proto.gemini.v1.ErrorResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gemini.v1.ErrorResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gemini.v1.ErrorResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gemini.v1.ErrorResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gemini.v1.ErrorResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.gemini.v1.ErrorResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gemini.v1.ErrorResponse} returns this
 */
proto.gemini.v1.ErrorResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 code = 2;
 * @return {number}
 */
proto.gemini.v1.ErrorResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gemini.v1.ErrorResponse} returns this
 */
proto.gemini.v1.ErrorResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.gemini.v1.ApprovalMode = {
  APPROVAL_MODE_UNSPECIFIED: 0,
  REJECT_DANGEROUS_TOOLS: 1,
  AUTO_APPROVE: 2
};

goog.object.extend(exports, proto.gemini.v1);
