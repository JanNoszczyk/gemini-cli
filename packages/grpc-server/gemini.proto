syntax = "proto3";

package gemini;

import "google/protobuf/struct.proto";

// Main service for interacting with Gemini CLI via gRPC
service GeminiService {
  // Main chat interface with bidirectional streaming
  rpc Chat(stream ClientRequest) returns (stream ServerResponse);
  
  // Session management endpoints
  rpc GetSessionInfo(SessionInfoRequest) returns (SessionInfoResponse);
  rpc GetSessionStats(SessionStatsRequest) returns (SessionStatsResponse);
  
  // Configuration management endpoints
  rpc UpdateConfig(ConfigUpdateRequest) returns (ConfigUpdateResponse);
  rpc GetConfig(GetConfigRequest) returns (GetConfigResponse);
  
  // File operation endpoints
  rpc ReadFile(FileReadRequest) returns (FileReadResponse);
  rpc WriteFile(FileWriteRequest) returns (FileOperationResponse);
  rpc EditFile(FileEditRequest) returns (FileOperationResponse);
  rpc DeleteFile(FileDeleteRequest) returns (FileOperationResponse);
  rpc MoveFile(FileMoveRequest) returns (FileOperationResponse);
  rpc ListDirectory(DirectoryListRequest) returns (DirectoryListResponse);
  rpc GenerateDiff(DiffGenerationRequest) returns (DiffGenerationResponse);
}

// ============ Client to Server Messages ============

// Forward declarations - will be defined later

message ClientRequest {
  oneof request {
    StartRequest start_request = 1;
    ChatMessage chat_message = 2;
    ToolConfirmationResponse tool_confirmation = 3;
    ConfigUpdateRequest config_update = 4;
    RefreshContextRequest refresh_context = 5;
    CancelOperationRequest cancel_operation = 6;
    GetHelpRequest get_help = 7;
    AutoCompleteRequest auto_complete = 8;
  }
}

// Start a new session or resume existing
message StartRequest {
  string session_id = 1;
  string initial_prompt = 2;
  
  // Model configuration
  string model = 3;
  string embedding_model = 4;
  
  // Tool configuration
  ApprovalMode approval_mode = 5;
  repeated string core_tools = 6;
  repeated string exclude_tools = 7;
  repeated McpServerConfig mcp_servers = 8;
  
  // UI preferences
  string theme = 9;
  string editor_type = 10;
  bool show_tool_descriptions = 11;
  bool show_error_details = 12;
  
  // Session options
  bool resume_from_checkpoint = 13;
  string checkpoint_tag = 14;
  
  // Advanced options
  google.protobuf.Struct advanced_config = 15;
}

// User chat message
message ChatMessage {
  string content = 1;
  bool is_shell_command = 2; // True if message starts with '!'
}

// User's response to tool confirmation
message ToolConfirmationResponse {
  string confirmation_id = 1;
  ConfirmationOption.OptionType selected_option = 2;
  
  // For MODIFY_WITH_EDITOR option
  string modified_content = 3;
}

// Request to refresh context (GEMINI.md, etc)
message RefreshContextRequest {
  bool force = 1;
}

// Cancel ongoing operation
message CancelOperationRequest {
  string operation_id = 1;
}

// Request help content
message GetHelpRequest {
  string command = 1; // Empty for general help
}

// Auto-completion request
message AutoCompleteRequest {
  string input = 1;
  int32 cursor_position = 2;
  AutoCompleteContext context = 3;
}

enum AutoCompleteContext {
  CONTEXT_CHAT_INPUT = 0;
  CONTEXT_FILE_PATH = 1;
  CONTEXT_COMMAND = 2;
}

// ============ Server to Client Messages ============

message ServerResponse {
  oneof response {
    // Session management
    SessionStarted session_started = 1;
    SessionStats session_stats = 2;
    
    // Chat messages
    ChatContent chat_content = 3;
    ThoughtBubble thought_bubble = 4;
    
    // Tool execution
    ToolConfirmationRequest tool_confirmation = 5;
    ToolStatusUpdate tool_status = 6;
    ToolOutputStream tool_output = 7;
    
    // Errors and info
    ErrorMessage error_message = 8;
    InfoMessage info_message = 9;
    WarningMessage warning_message = 10;
    
    // UI updates
    ProgressUpdate progress_update = 11;
    ConfigChanged config_changed = 12;
    HelpContent help_content = 13;
    AutoCompleteResult auto_complete_result = 14;
    
    // File operations
    FileEditPreview file_edit_preview = 15;
    FileOperationResult file_operation_result = 16;
    
    // Session updates
    ContextSummary context_summary = 17;
    UsageMetadata usage_metadata = 18;
  }
}

// ============ Common Types and Enums ============

enum ApprovalMode {
  APPROVAL_MODE_UNSPECIFIED = 0;
  DEFAULT = 1;           // Ask for confirmation
  AUTO_EDIT = 2;        // Auto-approve file edits only
  YOLO = 3;             // Auto-approve everything
}

// MCP server configuration
message McpServerConfig {
  string name = 1;
  string command = 2;
  repeated string args = 3;
  map<string, string> env = 4;
}

// ============ Session Messages ============

message SessionStarted {
  string session_id = 1;
  string model = 2;
  ContextSummary initial_context = 3;
}

message SessionInfoRequest {
  string session_id = 1;
}

message SessionInfoResponse {
  string session_id = 1;
  string model = 2;
  int32 turn_count = 3;
  int64 created_at = 4;
}

message SessionStatsRequest {
  string session_id = 1;
}

message SessionStatsResponse {
  SessionStats stats = 1;
}

message SessionStats {
  int32 turn_count = 1;
  TokenUsage total_tokens = 2;
  int64 total_api_time_ms = 3;
  int32 tools_executed = 4;
  int32 files_modified = 5;
  string session_duration = 6;
}

message TokenUsage {
  int32 input_tokens = 1;
  int32 output_tokens = 2;
  int32 cached_tokens = 3;
  int32 reasoning_tokens = 4;
  int32 total_tokens = 5;
}

// ============ Chat Messages ============

message ChatContent {
  enum ContentType {
    USER = 0;
    GEMINI = 1;
    ERROR = 2;
    INFO = 3;
    TOOL = 4;
    THOUGHT = 5;
  }
  ContentType type = 1;
  
  string content = 2;
  bool is_markdown = 3;
  bool is_streaming = 4;
  
  // For code blocks
  CodeBlock code_block = 5;
}

message CodeBlock {
  string language = 1;
  string code = 2;
  bool should_highlight = 3;
}

message ThoughtBubble {
  string subject = 1;
  string thought = 2;
}

// ============ Tool Execution Messages ============

message ToolConfirmationRequest {
  string confirmation_id = 1;
  string tool_name = 2;
  google.protobuf.Struct args = 3;
  
  enum ConfirmationType {
    EXECUTE = 0;
    EDIT_FILE = 1;
    SHELL_COMMAND = 2;
    MCP_TOOL = 3;
  }
  ConfirmationType type = 4;
  
  repeated ConfirmationOption options = 5;
  string description = 6;
  
  // For file edits, include diff preview
  DiffPreview diff_preview = 7;
  
  // For MCP tools
  string mcp_server = 8;
}

message ConfirmationOption {
  enum OptionType {
    ALLOW_ONCE = 0;
    ALLOW_ALWAYS = 1;
    ALLOW_ALWAYS_TOOL = 2;
    ALLOW_ALWAYS_SERVER = 3;
    MODIFY_WITH_EDITOR = 4;
    CANCEL = 5;
  }
  OptionType type = 1;
  string label = 2;
  string hotkey = 3;
}

message DiffPreview {
  string file_path = 1;
  repeated DiffHunk hunks = 2;
  int32 additions = 3;
  int32 deletions = 4;
}

message DiffHunk {
  int32 old_start = 1;
  int32 old_count = 2;
  int32 new_start = 3;
  int32 new_count = 4;
  repeated DiffLine lines = 5;
}

message DiffLine {
  enum LineType {
    CONTEXT = 0;
    ADDITION = 1;
    DELETION = 2;
  }
  LineType type = 1;
  string content = 2;
}

message ToolStatusUpdate {
  string tool_id = 1;
  string tool_name = 2;
  
  enum Status {
    PENDING = 0;
    VALIDATING = 1;
    SCHEDULED = 2;
    AWAITING_CONFIRMATION = 3;
    EXECUTING = 4;
    SUCCESS = 5;
    ERROR = 6;
    CANCELLED = 7;
  }
  Status status = 3;
  
  string description = 4;
  google.protobuf.Struct result = 5;
  string error_message = 6;
  int64 duration_ms = 7;
}

message ToolOutputStream {
  string tool_id = 1;
  string tool_name = 2;
  string output = 3;
  bool is_error = 4;
}

// ============ Error and Info Messages ============

message ErrorMessage {
  string message = 1;
  string details = 2;
  string stack_trace = 3;
  int32 code = 4;
  bool is_retryable = 5;
  repeated string suggestions = 6;
}

message InfoMessage {
  string message = 1;
  string details = 2;
}

message WarningMessage {
  string message = 1;
  string details = 2;
  bool show_border = 3;
}

// ============ UI Updates ============

message ProgressUpdate {
  string operation_id = 1;
  string operation = 2;
  string status = 3;
  float progress = 4; // 0-1, -1 for indeterminate
  string loading_phrase = 5;
  int64 elapsed_ms = 6;
}

message HelpContent {
  string content = 1;
  repeated Command available_commands = 2;
}

message Command {
  string name = 1;
  string description = 2;
  string usage = 3;
  repeated string aliases = 4;
}

message AutoCompleteResult {
  repeated Completion completions = 1;
}

message Completion {
  string value = 1;
  string display = 2;
  string description = 3;
  CompletionType type = 4;
}

enum CompletionType {
  COMPLETION_FILE_PATH = 0;
  COMPLETION_COMMAND = 1;
  COMPLETION_TOOL_NAME = 2;
  COMPLETION_MODEL_NAME = 3;
}

// ============ File Operations ============

message FileEditPreview {
  string file_path = 1;
  DiffPreview diff = 2;
  bool requires_confirmation = 3;
}

message FileOperationResult {
  string file_path = 1;
  FileOperation operation = 2;
  bool success = 3;
  string error_message = 4;
}

enum FileOperation {
  CREATE = 0;
  EDIT = 1;
  DELETE = 2;
  RENAME = 3;
}

// ============ Configuration ============

// Configuration update request
message ConfigUpdateRequest {
  oneof update {
    string theme = 1;
    string editor_type = 2;
    ApprovalMode approval_mode = 3;
    bool show_tool_descriptions = 4;
    bool show_error_details = 5;
    AuthConfig auth_config = 6;
  }
}

message AuthConfig {
  enum AuthType {
    OAUTH = 0;
    API_KEY = 1;
    VERTEX_AI = 2;
  }
  AuthType type = 1;
  string api_key = 2;
  string project_id = 3;
  string location = 4;
}

message GetConfigRequest {
  string session_id = 1;
}

message GetConfigResponse {
  CurrentConfig config = 1;
}

message CurrentConfig {
  string model = 1;
  ApprovalMode approval_mode = 2;
  string theme = 3;
  string editor_type = 4;
  bool show_tool_descriptions = 5;
  bool show_error_details = 6;
  repeated string enabled_tools = 7;
  repeated McpServerInfo mcp_servers = 8;
}

message ConfigUpdateResponse {
  bool success = 1;
  string message = 2;
  ConfigChanged change_notification = 3;
}

message ConfigChanged {
  string field = 1;
  string old_value = 2;
  string new_value = 3;
}

// ============ Context and Memory ============

message ContextSummary {
  repeated LoadedFile loaded_files = 1;
  repeated McpServerInfo mcp_servers = 2;
  string git_branch = 3;
  string working_directory = 4;
  MemoryInfo memory_info = 5;
}

message LoadedFile {
  string path = 1;
  string type = 2; // "GEMINI.md", "context", etc.
  int32 size = 3;
}

message McpServerInfo {
  string name = 1;
  string status = 2;
  repeated string available_tools = 3;
}

message MemoryInfo {
  bool has_user_memory = 1;
  int32 memory_size = 2;
  string last_updated = 3;
}

// ============ Metadata ============

message UsageMetadata {
  TokenUsage token_usage = 1;
  int64 api_time_ms = 2;
  string model_used = 3;
  bool used_fallback = 4;
}

// ============ Monitoring and Analytics ============

message AnalyticsReport {
  int64 timestamp = 1;
  PerformanceMetrics performance_metrics = 2;
  repeated ToolUsageStats tool_usage = 3;
  repeated ModelUsageStats model_usage = 4;
  SessionSummary session_summary = 5;
  repeated ActivityEntry recent_activity = 6;
}

message PerformanceMetrics {
  int32 total_requests = 1;
  double average_response_time_ms = 2;
  double requests_per_minute = 3;
  double error_rate = 4;
  double success_rate = 5;
  int32 concurrent_sessions = 6;
  int32 peak_concurrent_sessions = 7;
}

message ToolUsageStats {
  string tool_name = 1;
  int32 execution_count = 2;
  double total_execution_time_ms = 3;
  double average_execution_time_ms = 4;
  double success_rate = 5;
  int64 last_used = 6;
}

message ModelUsageStats {
  string model_name = 1;
  int32 request_count = 2;
  TokenUsage total_tokens = 3;
  double total_cost = 4;
  double average_latency_ms = 5;
  int64 last_used = 6;
}

message SessionSummary {
  int32 total_sessions = 1;
  int32 active_sessions = 2;
  double average_session_duration_ms = 3;
  int32 total_messages = 4;
  int32 total_tool_executions = 5;
  int32 total_errors = 6;
}

message ActivityEntry {
  int64 timestamp = 1;
  string session_id = 2;
  string action = 3;
  string details = 4;
  int64 duration_ms = 5;
  bool success = 6;
}

message MetricsSummary {
  int64 timestamp = 1;
  int64 time_range_ms = 2;
  repeated MetricSummary metrics = 3;
  repeated AlertInfo active_alerts = 4;
}

message MetricSummary {
  string name = 1;
  string description = 2;
  string unit = 3;
  double current_value = 4;
  double min_value = 5;
  double max_value = 6;
  double average_value = 7;
  int32 data_points = 8;
  string aggregation_type = 9;
}

message AlertInfo {
  string id = 1;
  string metric_name = 2;
  double current_value = 3;
  double threshold = 4;
  string condition = 5;
  int64 triggered_at = 6;
  string severity = 7;
  string description = 8;
}

// ============ File Operation Messages ============

message FileReadRequest {
  string session_id = 1;
  string file_path = 2;
  string encoding = 3; // Default: utf8
}

message FileReadResponse {
  bool success = 1;
  string content = 2;
  FileMetadata metadata = 3;
  string error_message = 4;
}

message FileWriteRequest {
  string session_id = 1;
  string file_path = 2;
  string content = 3;
  string encoding = 4; // Default: utf8
  bool backup = 5; // Default: true
  bool create_directories = 6; // Default: true
  bool confirm_overwrite = 7; // Default: true
}

message FileEditRequest {
  string session_id = 1;
  string file_path = 2;
  repeated FilePatch patches = 3;
  bool backup = 4; // Default: true
}

message FilePatch {
  int32 start_line = 1;
  int32 end_line = 2;
  string new_content = 3;
}

message FileDeleteRequest {
  string session_id = 1;
  string file_path = 2;
  bool recursive = 3; // For directories
  bool backup = 4; // Default: true
}

message FileMoveRequest {
  string session_id = 1;
  string source_path = 2;
  string target_path = 3;
}

message DirectoryListRequest {
  string session_id = 1;
  string directory_path = 2;
  bool recursive = 3;
  bool include_hidden = 4;
  string pattern = 5; // Regex pattern
}

message DirectoryListResponse {
  bool success = 1;
  repeated FileMetadata files = 2;
  string error_message = 3;
}

message DiffGenerationRequest {
  string session_id = 1;
  string file_path = 2;
  string old_content = 3;
  string new_content = 4;
}

message DiffGenerationResponse {
  bool success = 1;
  DiffPreview diff = 2;
  string error_message = 3;
}

message FileOperationResponse {
  bool success = 1;
  string operation_id = 2;
  DiffPreview preview = 3; // For operations that modify files
  string error_message = 4;
}

message FileMetadata {
  string path = 1;
  int64 size = 2;
  int64 mtime = 3; // Unix timestamp
  string type = 4; // "file", "directory", "symlink"
  string permissions = 5;
  string checksum = 6;
  string encoding = 7;
}